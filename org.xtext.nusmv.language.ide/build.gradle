// plugins {
// 	id 'com.github.johnrengelman.shadow' version '5.1.0'
// }

// dependencies {
// 	compile project(':org.xtext.nusmv.language')
// 	compile "org.eclipse.xtext:org.eclipse.xtext.ide:${xtextVersion}"
// 	compile "org.eclipse.xtext:org.eclipse.xtext.xbase.ide:${xtextVersion}"
// }

// apply plugin: 'application'
// apply plugin: 'com.github.johnrengelman.shadow'
// mainClassName = "org.eclipse.xtext.ide.server.ServerLauncher"

// shadowJar {
// 	from(project.convention.getPlugin(JavaPluginConvention).sourceSets.main.output)
// 	configurations = [project.configurations.runtime]
// 	exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA','schema/*',
// 		'.options', '.api_description', '*.profile', '*.html', 'about.*', 'about_files/*',
// 		'plugin.xml', 'systembundle.properties', 'profile.list')
// 	classifier = 'ls'
// 	append('plugin.properties')
// }

apply plugin: 'application'

dependencies {
	compile project(':org.xtext.nusmv.language')
	compile "org.eclipse.xtext:org.eclipse.xtext.ide:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase.ide:${xtextVersion}"
}

// Add a start script for the socket case
mainClassName = 'org.xtext.nusmv.language.ide.RunServer'
startScripts {
	applicationName = 'nusmv-socket'
}

// Add another start script for the standalone / self-contained case
task standaloneStartScript(type: CreateStartScripts) {
	mainClassName = 'org.eclipse.xtext.ide.server.ServerLauncher'
	applicationName = 'nusmv-standalone'
	outputDir = new File(project.buildDir, 'scripts')
	classpath = jar.outputs.files + project.configurations.runtime
}

applicationDistribution.into("bin") {
	from(standaloneStartScript)
	fileMode = 0755
}