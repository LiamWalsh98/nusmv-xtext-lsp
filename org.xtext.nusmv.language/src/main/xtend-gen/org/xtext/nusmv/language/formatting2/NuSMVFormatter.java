/**
 * generated by Xtext 2.21.0
 */
package org.xtext.nusmv.language.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.nusmv.language.nuSMV.FormalParameter;
import org.xtext.nusmv.language.nuSMV.ModuleElement;
import org.xtext.nusmv.language.nuSMV.NuSmvModel;
import org.xtext.nusmv.language.services.NuSMVGrammarAccess;

@SuppressWarnings("all")
public class NuSMVFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private NuSMVGrammarAccess _nuSMVGrammarAccess;
  
  protected void _format(final NuSmvModel nuSmvModel, @Extension final IFormattableDocument document) {
    EList<org.xtext.nusmv.language.nuSMV.Module> _modules = nuSmvModel.getModules();
    for (final org.xtext.nusmv.language.nuSMV.Module module : _modules) {
      document.<org.xtext.nusmv.language.nuSMV.Module>format(module);
    }
  }
  
  protected void _format(final org.xtext.nusmv.language.nuSMV.Module module, @Extension final IFormattableDocument document) {
    EList<FormalParameter> _params = module.getParams();
    for (final FormalParameter formalParameter : _params) {
      document.<FormalParameter>format(formalParameter);
    }
    EList<ModuleElement> _moduleElement = module.getModuleElement();
    for (final ModuleElement moduleElement : _moduleElement) {
      document.<ModuleElement>format(moduleElement);
    }
  }
  
  public void format(final Object module, final IFormattableDocument document) {
    if (module instanceof XtextResource) {
      _format((XtextResource)module, document);
      return;
    } else if (module instanceof org.xtext.nusmv.language.nuSMV.Module) {
      _format((org.xtext.nusmv.language.nuSMV.Module)module, document);
      return;
    } else if (module instanceof NuSmvModel) {
      _format((NuSmvModel)module, document);
      return;
    } else if (module instanceof EObject) {
      _format((EObject)module, document);
      return;
    } else if (module == null) {
      _format((Void)null, document);
      return;
    } else if (module != null) {
      _format(module, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(module, document).toString());
    }
  }
}
