/**
 * generated by Xtext 2.21.0
 */
package org.xtext.nusmv.language.nuSMV;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see org.xtext.nusmv.language.nuSMV.NuSMVPackage
 * @generated
 */
public interface NuSMVFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  NuSMVFactory eINSTANCE = org.xtext.nusmv.language.nuSMV.impl.NuSMVFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Nu Smv Model</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Nu Smv Model</em>'.
   * @generated
   */
  NuSmvModel createNuSmvModel();

  /**
   * Returns a new object of class '<em>Module</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Module</em>'.
   * @generated
   */
  Module createModule();

  /**
   * Returns a new object of class '<em>Module Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Module Element</em>'.
   * @generated
   */
  ModuleElement createModuleElement();

  /**
   * Returns a new object of class '<em>Variable Declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Variable Declaration</em>'.
   * @generated
   */
  VariableDeclaration createVariableDeclaration();

  /**
   * Returns a new object of class '<em>IVariable Declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>IVariable Declaration</em>'.
   * @generated
   */
  IVariableDeclaration createIVariableDeclaration();

  /**
   * Returns a new object of class '<em>Frozen Variable Declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Frozen Variable Declaration</em>'.
   * @generated
   */
  FrozenVariableDeclaration createFrozenVariableDeclaration();

  /**
   * Returns a new object of class '<em>Var Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Var Body</em>'.
   * @generated
   */
  VarBody createVarBody();

  /**
   * Returns a new object of class '<em>Define Declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Define Declaration</em>'.
   * @generated
   */
  DefineDeclaration createDefineDeclaration();

  /**
   * Returns a new object of class '<em>Define Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Define Body</em>'.
   * @generated
   */
  DefineBody createDefineBody();

  /**
   * Returns a new object of class '<em>Constants Declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Constants Declaration</em>'.
   * @generated
   */
  ConstantsDeclaration createConstantsDeclaration();

  /**
   * Returns a new object of class '<em>Assign Constraint Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Assign Constraint Element</em>'.
   * @generated
   */
  AssignConstraintElement createAssignConstraintElement();

  /**
   * Returns a new object of class '<em>Assign Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Assign Body</em>'.
   * @generated
   */
  AssignBody createAssignBody();

  /**
   * Returns a new object of class '<em>Var Body Assign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Var Body Assign</em>'.
   * @generated
   */
  VarBodyAssign createVarBodyAssign();

  /**
   * Returns a new object of class '<em>Init Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Init Body</em>'.
   * @generated
   */
  InitBody createInitBody();

  /**
   * Returns a new object of class '<em>Next Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Next Body</em>'.
   * @generated
   */
  NextBody createNextBody();

  /**
   * Returns a new object of class '<em>Trans Constraint</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Trans Constraint</em>'.
   * @generated
   */
  TransConstraint createTransConstraint();

  /**
   * Returns a new object of class '<em>Init Constraint</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Init Constraint</em>'.
   * @generated
   */
  InitConstraint createInitConstraint();

  /**
   * Returns a new object of class '<em>Invar Constraint</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Invar Constraint</em>'.
   * @generated
   */
  InvarConstraint createInvarConstraint();

  /**
   * Returns a new object of class '<em>Fairness Constraint</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fairness Constraint</em>'.
   * @generated
   */
  FairnessConstraint createFairnessConstraint();

  /**
   * Returns a new object of class '<em>Fairness Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fairness Expression</em>'.
   * @generated
   */
  FairnessExpression createFairnessExpression();

  /**
   * Returns a new object of class '<em>Justice Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Justice Expression</em>'.
   * @generated
   */
  JusticeExpression createJusticeExpression();

  /**
   * Returns a new object of class '<em>Compassion Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Compassion Expression</em>'.
   * @generated
   */
  CompassionExpression createCompassionExpression();

  /**
   * Returns a new object of class '<em>Ctl Specification</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Ctl Specification</em>'.
   * @generated
   */
  CtlSpecification createCtlSpecification();

  /**
   * Returns a new object of class '<em>Psl Specification</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Psl Specification</em>'.
   * @generated
   */
  PslSpecification createPslSpecification();

  /**
   * Returns a new object of class '<em>Invar Specification</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Invar Specification</em>'.
   * @generated
   */
  InvarSpecification createInvarSpecification();

  /**
   * Returns a new object of class '<em>Isa Declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Isa Declaration</em>'.
   * @generated
   */
  IsaDeclaration createIsaDeclaration();

  /**
   * Returns a new object of class '<em>Ltl Specification</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Ltl Specification</em>'.
   * @generated
   */
  LtlSpecification createLtlSpecification();

  /**
   * Returns a new object of class '<em>Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Type</em>'.
   * @generated
   */
  Type createType();

  /**
   * Returns a new object of class '<em>Simple Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Simple Type</em>'.
   * @generated
   */
  SimpleType createSimpleType();

  /**
   * Returns a new object of class '<em>Module Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Module Type</em>'.
   * @generated
   */
  ModuleType createModuleType();

  /**
   * Returns a new object of class '<em>Val</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Val</em>'.
   * @generated
   */
  Val createVal();

  /**
   * Returns a new object of class '<em>Next Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Next Expression</em>'.
   * @generated
   */
  NextExpression createNextExpression();

  /**
   * Returns a new object of class '<em>Simple Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Simple Expression</em>'.
   * @generated
   */
  SimpleExpression createSimpleExpression();

  /**
   * Returns a new object of class '<em>Formal Parameter</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Formal Parameter</em>'.
   * @generated
   */
  FormalParameter createFormalParameter();

  /**
   * Returns a new object of class '<em>Case Simple Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Case Simple Expression</em>'.
   * @generated
   */
  CaseSimpleExpression createCaseSimpleExpression();

  /**
   * Returns a new object of class '<em>Case Simple Assignement Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Case Simple Assignement Expression</em>'.
   * @generated
   */
  CaseSimpleAssignementExpression createCaseSimpleAssignementExpression();

  /**
   * Returns a new object of class '<em>CTL Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>CTL Expression</em>'.
   * @generated
   */
  CTLExpression createCTLExpression();

  /**
   * Returns a new object of class '<em>PSL Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>PSL Expression</em>'.
   * @generated
   */
  PSLExpression createPSLExpression();

  /**
   * Returns a new object of class '<em>LTL Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>LTL Expression</em>'.
   * @generated
   */
  LTLExpression createLTLExpression();

  /**
   * Returns a new object of class '<em>Range Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Range Expression</em>'.
   * @generated
   */
  RangeExpression createRangeExpression();

  /**
   * Returns a new object of class '<em>RTCTL Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>RTCTL Expression</em>'.
   * @generated
   */
  RTCTLExpression createRTCTLExpression();

  /**
   * Returns a new object of class '<em>Compute Specification</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Compute Specification</em>'.
   * @generated
   */
  ComputeSpecification createComputeSpecification();

  /**
   * Returns a new object of class '<em>Boolean Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Boolean Type</em>'.
   * @generated
   */
  BooleanType createBooleanType();

  /**
   * Returns a new object of class '<em>Word Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Word Type</em>'.
   * @generated
   */
  WordType createWordType();

  /**
   * Returns a new object of class '<em>Unsigned Word Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Unsigned Word Type</em>'.
   * @generated
   */
  UnsignedWordType createUnsignedWordType();

  /**
   * Returns a new object of class '<em>Signed Word Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Signed Word Type</em>'.
   * @generated
   */
  SignedWordType createSignedWordType();

  /**
   * Returns a new object of class '<em>Enum Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Enum Type</em>'.
   * @generated
   */
  EnumType createEnumType();

  /**
   * Returns a new object of class '<em>Interval Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Interval Type</em>'.
   * @generated
   */
  IntervalType createIntervalType();

  /**
   * Returns a new object of class '<em>Array Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Array Type</em>'.
   * @generated
   */
  ArrayType createArrayType();

  /**
   * Returns a new object of class '<em>Asyncr Process Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Asyncr Process Type</em>'.
   * @generated
   */
  AsyncrProcessType createAsyncrProcessType();

  /**
   * Returns a new object of class '<em>Syncr Process Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Syncr Process Type</em>'.
   * @generated
   */
  SyncrProcessType createSyncrProcessType();

  /**
   * Returns a new object of class '<em>Binary Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Binary Expression</em>'.
   * @generated
   */
  BinaryExpression createBinaryExpression();

  /**
   * Returns a new object of class '<em>Not</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Not</em>'.
   * @generated
   */
  Not createNot();

  /**
   * Returns a new object of class '<em>Pars Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Pars Expression</em>'.
   * @generated
   */
  ParsExpression createParsExpression();

  /**
   * Returns a new object of class '<em>Unary Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Unary Expression</em>'.
   * @generated
   */
  UnaryExpression createUnaryExpression();

  /**
   * Returns a new object of class '<em>Value Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Value Expression</em>'.
   * @generated
   */
  ValueExpression createValueExpression();

  /**
   * Returns a new object of class '<em>Var</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Var</em>'.
   * @generated
   */
  Var createVar();

  /**
   * Returns a new object of class '<em>Set Element Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Set Element Expression</em>'.
   * @generated
   */
  SetElementExpression createSetElementExpression();

  /**
   * Returns a new object of class '<em>Set Value Parameter</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Set Value Parameter</em>'.
   * @generated
   */
  SetValueParameter createSetValueParameter();

  /**
   * Returns a new object of class '<em>Set Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Set Expression</em>'.
   * @generated
   */
  SetExpression createSetExpression();

  /**
   * Returns a new object of class '<em>Word Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Word Expression</em>'.
   * @generated
   */
  WordExpression createWordExpression();

  /**
   * Returns a new object of class '<em>Interval Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Interval Expression</em>'.
   * @generated
   */
  IntervalExpression createIntervalExpression();

  /**
   * Returns a new object of class '<em>Until CT Lexpression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Until CT Lexpression</em>'.
   * @generated
   */
  UntilCTLexpression createUntilCTLexpression();

  /**
   * Returns a new object of class '<em>Unary Function Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Unary Function Expression</em>'.
   * @generated
   */
  UnaryFunctionExpression createUnaryFunctionExpression();

  /**
   * Returns a new object of class '<em>To Int</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>To Int</em>'.
   * @generated
   */
  ToInt createToInt();

  /**
   * Returns a new object of class '<em>Single RTCTL Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Single RTCTL Expression</em>'.
   * @generated
   */
  SingleRTCTLExpression createSingleRTCTLExpression();

  /**
   * Returns a new object of class '<em>Unary RTCTL Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Unary RTCTL Expression</em>'.
   * @generated
   */
  UnaryRTCTLExpression createUnaryRTCTLExpression();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  NuSMVPackage getNuSMVPackage();

} //NuSMVFactory
