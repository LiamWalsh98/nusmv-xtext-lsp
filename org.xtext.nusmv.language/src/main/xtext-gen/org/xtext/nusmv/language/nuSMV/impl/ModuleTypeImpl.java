/**
 * generated by Xtext 2.21.0
 */
package org.xtext.nusmv.language.nuSMV.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.nusmv.language.nuSMV.ModuleType;
import org.xtext.nusmv.language.nuSMV.NuSMVPackage;
import org.xtext.nusmv.language.nuSMV.SimpleExpression;
import org.xtext.nusmv.language.nuSMV.VarBody;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Module Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.nusmv.language.nuSMV.impl.ModuleTypeImpl#getModule <em>Module</em>}</li>
 *   <li>{@link org.xtext.nusmv.language.nuSMV.impl.ModuleTypeImpl#getParams <em>Params</em>}</li>
 *   <li>{@link org.xtext.nusmv.language.nuSMV.impl.ModuleTypeImpl#getPar <em>Par</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModuleTypeImpl extends TypeImpl implements ModuleType
{
  /**
   * The cached value of the '{@link #getModule() <em>Module</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModule()
   * @generated
   * @ordered
   */
  protected org.xtext.nusmv.language.nuSMV.Module module;

  /**
   * The cached value of the '{@link #getParams() <em>Params</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParams()
   * @generated
   * @ordered
   */
  protected EList<SimpleExpression> params;

  /**
   * The cached value of the '{@link #getPar() <em>Par</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPar()
   * @generated
   * @ordered
   */
  protected VarBody par;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModuleTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return NuSMVPackage.Literals.MODULE_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public org.xtext.nusmv.language.nuSMV.Module getModule()
  {
    if (module != null && module.eIsProxy())
    {
      InternalEObject oldModule = (InternalEObject)module;
      module = (org.xtext.nusmv.language.nuSMV.Module)eResolveProxy(oldModule);
      if (module != oldModule)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, NuSMVPackage.MODULE_TYPE__MODULE, oldModule, module));
      }
    }
    return module;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public org.xtext.nusmv.language.nuSMV.Module basicGetModule()
  {
    return module;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setModule(org.xtext.nusmv.language.nuSMV.Module newModule)
  {
    org.xtext.nusmv.language.nuSMV.Module oldModule = module;
    module = newModule;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NuSMVPackage.MODULE_TYPE__MODULE, oldModule, module));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<SimpleExpression> getParams()
  {
    if (params == null)
    {
      params = new EObjectContainmentEList<SimpleExpression>(SimpleExpression.class, this, NuSMVPackage.MODULE_TYPE__PARAMS);
    }
    return params;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VarBody getPar()
  {
    if (par != null && par.eIsProxy())
    {
      InternalEObject oldPar = (InternalEObject)par;
      par = (VarBody)eResolveProxy(oldPar);
      if (par != oldPar)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, NuSMVPackage.MODULE_TYPE__PAR, oldPar, par));
      }
    }
    return par;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarBody basicGetPar()
  {
    return par;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPar(VarBody newPar)
  {
    VarBody oldPar = par;
    par = newPar;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NuSMVPackage.MODULE_TYPE__PAR, oldPar, par));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case NuSMVPackage.MODULE_TYPE__PARAMS:
        return ((InternalEList<?>)getParams()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case NuSMVPackage.MODULE_TYPE__MODULE:
        if (resolve) return getModule();
        return basicGetModule();
      case NuSMVPackage.MODULE_TYPE__PARAMS:
        return getParams();
      case NuSMVPackage.MODULE_TYPE__PAR:
        if (resolve) return getPar();
        return basicGetPar();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case NuSMVPackage.MODULE_TYPE__MODULE:
        setModule((org.xtext.nusmv.language.nuSMV.Module)newValue);
        return;
      case NuSMVPackage.MODULE_TYPE__PARAMS:
        getParams().clear();
        getParams().addAll((Collection<? extends SimpleExpression>)newValue);
        return;
      case NuSMVPackage.MODULE_TYPE__PAR:
        setPar((VarBody)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case NuSMVPackage.MODULE_TYPE__MODULE:
        setModule((org.xtext.nusmv.language.nuSMV.Module)null);
        return;
      case NuSMVPackage.MODULE_TYPE__PARAMS:
        getParams().clear();
        return;
      case NuSMVPackage.MODULE_TYPE__PAR:
        setPar((VarBody)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case NuSMVPackage.MODULE_TYPE__MODULE:
        return module != null;
      case NuSMVPackage.MODULE_TYPE__PARAMS:
        return params != null && !params.isEmpty();
      case NuSMVPackage.MODULE_TYPE__PAR:
        return par != null;
    }
    return super.eIsSet(featureID);
  }

} //ModuleTypeImpl
